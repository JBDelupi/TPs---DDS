@startuml Sensor de Temperatura - Actualizacion de Temperatura

actor RabbitMQ

entity RabbitMQAdapter
entity FactoryPublicacion
control ActualizacionTemperaturaController
actor PersonaJuridica
entity Heladera
entity Incidente
entity SensorDeTemperatura
entity ChromeTask

RabbitMQ -> RabbitMQAdapter: jsonMessage
activate RabbitMQ
deactivate RabbitMQ
activate RabbitMQAdapter
RabbitMQAdapter -> FactoryPublicacion: Publicacion(type)
activate FactoryPublicacion
FactoryPublicacion -> RabbitMQAdapter: Publicacion
deactivate FactoryPublicacion
RabbitMQAdapter -> ActualizacionTemperaturaController: handleMessage(jsonMessage)
deactivate RabbitMQAdapter
activate ActualizacionTemperaturaController
ActualizacionTemperaturaController -> SensorDeTemperatura: activar()
activate SensorDeTemperatura
activate Heladera
ActualizacionTemperaturaController -> Heladera: setTemperaturaActual(Double.parseDouble(temperatura))
deactivate ActualizacionTemperaturaController
SensorDeTemperatura -> ChromeTask: ejecutarTareaPrograma(5,this,"chequear")
activate ChromeTask
ChromeTask -> SensorDeTemperatura: chequear()
deactivate ChromeTask

alt superaTemperaturaMax() || superaTemperaturaMin()

    SensorDeTemperatura -> Heladera: generarIncidente(TipoAlerta.TEMPERATURA)
    Heladera -> Incidente: setId()
    activate Incidente
    deactivate Incidente
    Heladera -> Heladera: notify(nuevaAlerta)
    Heladera -> PersonaJuridica: notify()
    activate PersonaJuridica
    deactivate PersonaJuridica
    SensorDeTemperatura -> ChromeTask: pausarTarea();
    deactivate Heladera
end

activate ChromeTask
deactivate ChromeTask
deactivate SensorDeTemperatura

@enduml